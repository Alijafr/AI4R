#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Oct 11 21:31:23 2021

@author: labuser
"""
from DroneSimulator import DroneSimulator

def twiddle_thrust(tolerance=0.001,p=30,d=2000):
    simulator = DroneSimulator()
    params = [p,d]
    #params = [30,2000]
    dparams = [1,50]
    score_1 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = False, 
        target_elevation    = 20, 
        target_x            = 0,
        num_steps           = 500,
        target_hover_time   = 100, 
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.00,
        DEBUG               = False,
        VISUALIZE           = False,
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0})
    score_2 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = False, 
        target_elevation    = 25, 
        target_x            = 0,
        num_steps           = 600,
        target_hover_time   = 150, 
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.00,
        DEBUG               = False,
        VISUALIZE           = False,
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0})
    score_3 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = False, 
        target_elevation    = 40, 
        target_x            = 0,
        num_steps           = 700,
        target_hover_time   = 120, 
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.00,
        DEBUG               = False,
        VISUALIZE           = False,
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0})
    score = (score_1 + score_2 + score_3)/3
    best_error = 1.0-score
    best_params = params
    n = 0
    while sum(dparams) > tolerance:
        for i in range(len(params)):
            params[i] += dparams[i]
            score_1 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = False, 
                target_elevation    = 20, 
                target_x            = 0,
                num_steps           = 500,
                target_hover_time   = 100, 
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.00,
                DEBUG               = False,
                VISUALIZE           = False,
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0})
            score_2 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = False, 
                target_elevation    = 25, 
                target_x            = 0,
                num_steps           = 600,
                target_hover_time   = 150, 
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.00,
                DEBUG               = False,
                VISUALIZE           = False,
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0})
            score_3 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = False, 
                target_elevation    = 40, 
                target_x            = 0,
                num_steps           = 700,
                target_hover_time   = 120, 
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.00,
                DEBUG               = False,
                VISUALIZE           = False,
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0})
            score = (score_1 + score_2 + score_3)/3
            score_error = 1.0-score
            
            if score_error < best_error:
                best_error = score_error
                best_params = params
                dparams[i] *= 1.1
            else:
                params[i] -= 2*dparams[i]
                score_1 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = False, 
                    target_elevation    = 20, 
                    target_x            = 0,
                    num_steps           = 500,
                    target_hover_time   = 100, 
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.00,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0})
                score_2 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = False, 
                    target_elevation    = 25, 
                    target_x            = 0,
                    num_steps           = 600,
                    target_hover_time   = 150, 
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.00,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0})
                score_3 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = False, 
                    target_elevation    = 40, 
                    target_x            = 0,
                    num_steps           = 700,
                    target_hover_time   = 120, 
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.00,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0})
                score = (score_1 + score_2 + score_3)/3
                score_error = 1.0-score
                if score_error < best_error:
                    best_error = score_error
                    best_params = params
                    dparams[i] *= 1.1
                else:
                    params[i] += dparams[i]
                    dparams[i] *= 0.9
        n +=1
    return score,best_params,n


def twiddle_roll_thrust(tolerance=0.001,p_t=25,d_t=2255,p_r=3,d_r=250,i_r=0):
    simulator = DroneSimulator()
    params = [p_t,d_t,p_r,d_r,i_r]
    dparams = [1,50,0.3,10,0.5]
    score_1 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = True, 
        target_elevation    = 5, 
        target_x            = 3,
        num_steps           = 600,
        target_hover_time   = 250, 
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.02,
        DEBUG               = False,
        VISUALIZE           = False,
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0},
        roll_params         = {'tau_p': params[2], 'tau_d': params[3], 'tau_i': params[4]})

    score_2 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = True, 
        target_elevation    = 6, 
        target_x            = 2.2, 
        num_steps           = 600, 
        target_hover_time   = 250, 
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.02,
        DEBUG               = False,
        VISUALIZE           = False,
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0},
        roll_params         = {'tau_p': params[2], 'tau_d': params[3], 'tau_i': params[4]})    

    
    score_3 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = True, 
        target_elevation    = 5.5, 
        target_x            = -4.5, 
        num_steps           = 600, 
        target_hover_time   = 250,  
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.02,
        DEBUG               = False,
        VISUALIZE           = False,
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0},
        roll_params         = {'tau_p': params[2], 'tau_d': params[3], 'tau_i': params[4]})
    
    score = (score_1 + score_2 + score_3)/3
    best_error = 1.0-score
    best_params = params
    n = 0
    while sum(dparams) > tolerance:
        for i in range(len(params)):
            params[i] += dparams[i]
            score_1 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = True, 
                target_elevation    = 5, 
                target_x            = 3,
                num_steps           = 600,
                target_hover_time   = 250, 
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.02,
                DEBUG               = False,
                VISUALIZE           = False,
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0},
                roll_params         = {'tau_p': params[2], 'tau_d': params[3], 'tau_i': params[4]})

            score_2 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = True, 
                target_elevation    = 6, 
                target_x            = 2.2, 
                num_steps           = 600, 
                target_hover_time   = 250, 
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.02,
                DEBUG               = False,
                VISUALIZE           = False,
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0},
                roll_params         = {'tau_p': params[2], 'tau_d': params[3], 'tau_i': params[4]})    

            
            score_3 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = True, 
                target_elevation    = 5.5, 
                target_x            = -4.5, 
                num_steps           = 600, 
                target_hover_time   = 250,  
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.02,
                DEBUG               = False,
                VISUALIZE           = False,
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0},
                roll_params         = {'tau_p': params[2], 'tau_d': params[3], 'tau_i': params[4]})
            score = (score_1 + score_2 + score_3)/3
            score_error = 1.0-score
            
            if score_error < best_error:
                best_error = score_error
                best_params = params
                dparams[i] *= 1.1
            else:
                params[i] -= 2*dparams[i]
                score_1 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = True, 
                    target_elevation    = 5, 
                    target_x            = 3,
                    num_steps           = 600,
                    target_hover_time   = 250, 
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.02,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0},
                    roll_params         = {'tau_p': params[2], 'tau_d': params[3], 'tau_i': params[4]})

                score_2 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = True, 
                    target_elevation    = 6, 
                    target_x            = 2.2, 
                    num_steps           = 600, 
                    target_hover_time   = 250, 
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.02,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0},
                    roll_params         = {'tau_p': params[2], 'tau_d': params[3], 'tau_i': params[4]})    

                
                score_3 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = True, 
                    target_elevation    = 5.5, 
                    target_x            = -4.5, 
                    num_steps           = 600, 
                    target_hover_time   = 250,  
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.02,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': 0},
                    roll_params         = {'tau_p': params[2], 'tau_d': params[3], 'tau_i': params[4]})
                score = (score_1 + score_2 + score_3)/3
                score_error = 1.0-score
                if score_error < best_error:
                    best_error = score_error
                    best_params = params
                    dparams[i] *= 1.1
                else:
                    params[i] += dparams[i]
                    dparams[i] *= 0.9
        n +=1
    return score,best_params,n


def twiddle_thrust_pid(tolerance=0.001,p=26,d=2300,i=0.0):
    simulator = DroneSimulator()
    params = [p,d,i]
    #params = [30,2000]
    dparams = [1,50,0]
    score_1 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = False, 
        target_elevation    = 18,
        target_x            = 0, #-10,
        num_steps           = 600, #1000, 
        target_hover_time   = 300, 
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.00,
        DEBUG               = False,
        VISUALIZE           = False,
        test_integral       = True,
        drone_rpm_error     = 2, 
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
    score_2 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = False, 
        target_elevation    = 2, 
        target_x            = 0, #12,
        num_steps           = 600, #1000, 
        target_hover_time   = 350,
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.00,
        DEBUG               = False,
        VISUALIZE           = False,
        test_integral       = True,
        drone_rpm_error     = 2, 
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
    score_3 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = False, 
        target_elevation    = 22, 
        target_x            = 0, #-10,
        num_steps           = 600, #1000, 
        target_hover_time   = 300, 
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.00,
        DEBUG               = False,
        VISUALIZE           = False,
        test_integral       = True,
        drone_rpm_error     = 2, 
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
    score_4 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = False, 
        target_elevation    = 3, 
        target_x            = 0, #-10,
        num_steps           = 600, #1000, 
        target_hover_time   = 300, 
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.00,
        DEBUG               = False,
        VISUALIZE           = False,
        test_integral       = True,
        drone_rpm_error     = 2, 
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
    score_5 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = False, 
        target_elevation    = 35, 
        target_x            = 0, #-10,
        num_steps           = 600,
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.00,
        DEBUG               = False,
        VISUALIZE           = False,
        test_integral       = True,
        drone_rpm_error     = 2, 
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
    score_6 = simulator.test_core(
        test_thrust         = True, 
        test_roll           = False, 
        target_elevation    = 10, 
        target_x            = 0, #-10,
        num_steps           = 600, #1000, 
        target_hover_time   = 300, 
        supply_params       = True, 
        target_elev_error   = 0.02,
        target_x_error      = 0.00,
        DEBUG               = False,
        VISUALIZE           = False,
        test_integral       = True,
        drone_rpm_error     = 2, 
        thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
    score = (score_1 + score_2 + score_3+score_4+score_5+score_6)/6
    best_error = 1.0-score
    best_params = params
    n = 0
    while sum(dparams) > tolerance:
        for i in range(len(params)):
            params[i] += dparams[i]
            score_1 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = False, 
                target_elevation    = 18,
                target_x            = 0, #-10,
                num_steps           = 600, #1000, 
                target_hover_time   = 300, 
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.00,
                DEBUG               = False,
                VISUALIZE           = False,
                test_integral       = True,
                drone_rpm_error     = 2, 
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
            score_2 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = False, 
                target_elevation    = 2, 
                target_x            = 0, #12,
                num_steps           = 600, #1000, 
                target_hover_time   = 350,
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.00,
                DEBUG               = False,
                VISUALIZE           = False,
                test_integral       = True,
                drone_rpm_error     = 2, 
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
            score_3 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = False, 
                target_elevation    = 22, 
                target_x            = 0, #-10,
                num_steps           = 600, #1000, 
                target_hover_time   = 300, 
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.00,
                DEBUG               = False,
                VISUALIZE           = False,
                test_integral       = True,
                drone_rpm_error     = 2, 
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
            score_4 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = False, 
                target_elevation    = 3, 
                target_x            = 0, #-10,
                num_steps           = 600, #1000, 
                target_hover_time   = 300, 
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.00,
                DEBUG               = False,
                VISUALIZE           = False,
                test_integral       = True,
                drone_rpm_error     = 2, 
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
            score_5 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = False, 
                target_elevation    = 35, 
                target_x            = 0, #-10,
                num_steps           = 600,
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.00,
                DEBUG               = False,
                VISUALIZE           = False,
                test_integral       = True,
                drone_rpm_error     = 2, 
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
            score_6 = simulator.test_core(
                test_thrust         = True, 
                test_roll           = False, 
                target_elevation    = 10, 
                target_x            = 0, #-10,
                num_steps           = 600, #1000, 
                target_hover_time   = 300, 
                supply_params       = True, 
                target_elev_error   = 0.02,
                target_x_error      = 0.00,
                DEBUG               = False,
                VISUALIZE           = False,
                test_integral       = True,
                drone_rpm_error     = 2, 
                thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
            score = (score_1 + score_2 + score_3+score_4+score_5+score_6)/6
            score_error = 1.0-score
            
            if score_error < best_error:
                best_error = score_error
                best_params = params
                dparams[i] *= 1.1
            else:
                params[i] -= 2*dparams[i]
                score_1 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = False, 
                    target_elevation    = 18,
                    target_x            = 0, #-10,
                    num_steps           = 600, #1000, 
                    target_hover_time   = 300, 
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.00,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    test_integral       = True,
                    drone_rpm_error     = 2, 
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
                score_2 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = False, 
                    target_elevation    = 2, 
                    target_x            = 0, #12,
                    num_steps           = 600, #1000, 
                    target_hover_time   = 350,
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.00,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    test_integral       = True,
                    drone_rpm_error     = 2, 
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
                score_3 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = False, 
                    target_elevation    = 22, 
                    target_x            = 0, #-10,
                    num_steps           = 600, #1000, 
                    target_hover_time   = 300, 
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.00,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    test_integral       = True,
                    drone_rpm_error     = 2, 
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
                score_4 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = False, 
                    target_elevation    = 3, 
                    target_x            = 0, #-10,
                    num_steps           = 600, #1000, 
                    target_hover_time   = 300, 
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.00,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    test_integral       = True,
                    drone_rpm_error     = 2, 
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
                score_5 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = False, 
                    target_elevation    = 35, 
                    target_x            = 0, #-10,
                    num_steps           = 600,
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.00,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    test_integral       = True,
                    drone_rpm_error     = 2, 
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
                score_6 = simulator.test_core(
                    test_thrust         = True, 
                    test_roll           = False, 
                    target_elevation    = 10, 
                    target_x            = 0, #-10,
                    num_steps           = 600, #1000, 
                    target_hover_time   = 300, 
                    supply_params       = True, 
                    target_elev_error   = 0.02,
                    target_x_error      = 0.00,
                    DEBUG               = False,
                    VISUALIZE           = False,
                    test_integral       = True,
                    drone_rpm_error     = 2, 
                    thrust_params       = {'tau_p': params[0], 'tau_d': params[1], 'tau_i': params[2]})
                score = (score_1 + score_2 + score_3+score_4+score_5+score_6)/6
                score_error = 1.0-score
                if score_error < best_error:
                    best_error = score_error
                    best_params = params
                    dparams[i] *= 1.1
                else:
                    params[i] += dparams[i]
                    dparams[i] *= 0.9
        n +=1
    return score,best_params,n



